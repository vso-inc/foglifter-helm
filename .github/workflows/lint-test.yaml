name: Lint and Test Charts

on:

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: https://index.docker.io/v1/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        # if: steps.list-changed.outputs.changed == 'true'
        run: >
          ct lint --all
          --validate-maintainers=false
          --target-branch=${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        # if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.7.0

      - name: Create FogLifter pullsecret
        # if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create ns foglifter
          kubectl -n foglifter create secret docker-registry foglifter-pullsecret \
          --docker-server=${{ env.IMAGE_REGISTRY }} \
          --docker-username=${{ secrets.IMAGE_REGISTRY_USERNAME }} \
          --docker-password=${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Run chart-testing (install)
        # if: steps.list-changed.outputs.changed == 'true'
        run: >
          ct install --all
          --excluded-charts=foglifter-argocd
          --target-branch=${{ github.event.repository.default_branch }}
          --build-id=${{ github.run_id }}
          --namespace=foglifter
          --helm-extra-args="--timeout 800s"
          --helm-extra-set-args="--set=storageClass=standard --set=postgres.storageClass=standard --set=viewApp.host=localhost"
