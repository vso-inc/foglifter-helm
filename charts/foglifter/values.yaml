# Default values for foglifter chart
#
nameOverride: ""
fullnameOverride: ""
#
# Global values which can be overriden at the microservice level
global:
  imagePullPolicy: Always
  envSecretRef:
    # ENV_VAR_NAME:
    #   name: secret-name
    #   key: secret_key
  envFrom:
    # - configMapRef:
    #     name: example-cm
    # - secretRef:
    #     name: example-secret
  labels:
    key: value
  annotations:
    # key: value
  nodeSelector:
    # key: value
  tolerations:
    # - key: "key"
    #   operator: "Equal"
    #   value: "value"
    #   effect: "NoSchedule"
  affinity:
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchExpressions:
    #           - key: "app"
    #             operator: "In"
    #             values:
    #               - "foglifter"
    #       topologyKey: "kubernetes.io/hostname"
#
# ServiceAccount to be applied to all microservices
# This ServiceAccount will use the specified imagePullSecret(s) to pull the FogLifter® images
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # Image pull secrets to attach to the service account
  # Currently REQUIRED to pull the FogLifter® images from the private container registry
  imagePullSecrets: []
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
#
# FogLifter® API key secret configuration
# This secret is required for the FogLifter® stack to function properly
apiKeySecret:
  create: true
  # Existing secret must contain the following key-value pairs:
    # CORE_APIKEY: "<core-api-key>"
    # EXECUTOR_APIKEY: "<exec-api-key>"
    # SCHEDULER_APIKEY: "<scheduler-api-key>"
  # These API keys may be any string value
  existingSecret: ""
#
# MongoDB secret configuration
mongoDB:
  # Connection string for FogLifter® MongoDB backend (overridden by existingSecret)
  uri: ""
  # Existing secret containing the MongoDB connection string (overrides uri)
  existingSecret:
    # Existing MongoDB secret name
    name: ""
    # Existing secret key containing the MongoDB connection string
    key: ""
#
# The following represent the specific values for each microservice deployed in the FogLifter® stack
#
# FogLifter® API service, responsible for handling API requests
api:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env:
    API_PREFIX: "api"
    TRUST_TOKEN_HASH_KEY: ""
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Auth service, responsible for authentication and authorization
auth:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Client service, an Angular-based web client
client:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Core service, responsible for handling core business logic
core:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Execution service, responsible for handling execution of pipelines
exec:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® MainUI service, a React-based user interface for the FogLifter® stack
mainUI:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Module service, which handles pipeline uploads
module:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
#
# FogLifter® Scheduler service, responsible for scheduling pipeline executions
scheduler:
  replicas: 1
  image:
    repository: ghcr.io/vso-inc/foglifter-api-service
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
    pullPolicy: ""
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  ingress:
    path: /api/v1
    pathType: Prefix
  env: {}
    # ENV_VAR_NAME: value
  envSecretRef: {}
  envFrom: {}
  labels: {}
  annotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
# 
# End of microservice-specific values
#
# FogLifter® environment variable ConfigMap parameters
cm:
  # Create ConfigMap resource
  create: true
  # Environment variables to be passed to FogLifter® deployments via ConfigMap
  data:
    # ENV_VAR_NAME: value
#
# FogLifter® environment variable Secret parameters
secret:
  # Create Secret resource
  create: false
  # Environment variables to be passed to all FogLifter® deployments via Secret
  data:
  # FOO: bar
  # LOREM: ipsum
#
# Optional existing secret containing RSA private key for decryption
decryptionKey:
  # Existing decryption secret name
  secretName: ""
  # Existing secret key containing the RSA private key
  key: ""
#
# FogLifter® PriorityClass parameters
priorityClass:
  # Create PriorityClass to resist eviction
  create: true
  # PriorityClass priority value
  value: 1000000
#
# Optional Ingress resource for the FogLifter® stack
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - chart-example.local
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
