kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-core
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ default "1" ((.Values.foglifter).core).replicas | int }}
  selector:
    matchLabels:
      name: {{ .Release.Name }}-core
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-core
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-cm
      containers:
        - name: core-app
          image: "{{ default "vsodevops" (.Values.foglifter).registry }}/{{ default "foglifter-core-app" ((.Values.foglifter).core).repository }}:{{ default "latest" (.Values.foglifter).imageTag }}"
          imagePullPolicy: "{{ default "Always" (.Values.foglifter).imagePullPolicy }}"
          args:
            - node
            {{- if ((((.Values.foglifter).core).resources).limits).memory }}
            - "--max-old-space-size={{ ((((.Values.foglifter).core).resources).limits).memory }}"
            {{- end }}
            - src/server.js
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-cm
          {{- $port := default "8080" ((.Values.foglifter).core).port | int }}
          env:
            - name: PORT
              value: "{{ $port }}"
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongo-secret
                  key: MONGO_URI
          ports:
            - containerPort: {{ $port }}
          resources:
            {{- toYaml ((.Values.foglifter).core).resources | nindent 12 }}
      {{- if (ne ((.Values.foglifter).core).execAntiAffinity false) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ .Release.Name }}-exec
                topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- if (ne (.Values.priorityClass).create false) }}
      priorityClassName: {{ .Release.Name }}
      {{- end }}
