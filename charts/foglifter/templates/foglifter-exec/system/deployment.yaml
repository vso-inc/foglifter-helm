{{- if (.Values.exec).replication }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-exec-system
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ default "1" ((.Values.exec).system).replicas | int }}
  selector:
    matchLabels:
      name: {{ .Release.Name }}-exec
      queue: system
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-exec
        queue: system
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      containers:
        - name: exec-app
          {{- $imageTagDelimiter := ":" }}
          {{- if (hasPrefix "sha256:" (.Values.exec).tag) }}
            {{- $imageTagDelimiter = "@" }}
          {{- end }}
          image: "{{ default "ghcr.io/vso-inc/" .Values.registry }}{{ default "foglifter-exec-app" (.Values.exec).repository }}{{ $imageTagDelimiter }}{{ default "latest" (.Values.exec).tag }}"
          imagePullPolicy: "{{ default "Always" .Values.imagePullPolicy }}"
          args:
            - node
            {{- if ((((.Values.exec).system).resources).limits).memory }}
            - "--max-old-space-size={{ regexReplaceAll "[^0-9]+" ((((.Values.exec).system).resources).limits).memory "" }}"
            {{- end }}
            - src/server.js
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-cm
            {{- if and (ne (.Values.secret).create false) (.Values.secret).data }}
            - secretRef:
                name: {{ .Release.Name }}-secret
            {{- end }}
          env:
            {{- $decryptionKeySecret := "" }}
            {{- if .Values.decryptionKeySecret }}
              {{- $decryptionKeySecret = .Values.decryptionKeySecret }}
            {{- else }}
              {{- range $i, $secret := (lookup "v1" "Secret" .Release.Namespace "").items }}
                {{- if (get (get $secret "data" | default dict) "DECRYPTION_KEY") }}
                  {{- $decryptionKeySecret = $secret.metadata.name }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if $decryptionKeySecret }}
            - name: DECRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $decryptionKeySecret }}
                  key: DECRYPTION_KEY
            {{- end }}
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  {{- if (.Values.apiSecret).create }}
                  name: {{ .Release.Name }}-api-secret
                  {{- else if (.Values.apiSecret).name }}
                  name: {{ .Values.apiSecret.name }}
                  {{- end }}
                  key: EXECUTOR_APIKEY
            {{- include "foglifter.mongoUri" . | nindent 12 }}
            - name: QUEUES
              value: system
            {{- if (.Values.exec).env }}
            {{- range $key, $val := .Values.exec.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
            {{- if ((.Values.exec).system).env }}
            {{- range $key, $val := .Values.exec.system.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
            {{- if (.Values.exec).secretRef }}
            {{- with .Values.exec.secretRef }}
            {{- range $key, $val := . }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $val.name }}
                  key: {{ $val.key }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if ((.Values.exec).system).secretRef }}
            {{- with .Values.exec.system.secretRef }}
            {{- range $key, $val := . }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $val.name }}
                  key: {{ $val.key }}
            {{- end }}
            {{- end }}
            {{- end }}
          resources:
            {{- default dict ((.Values.exec).system).resources | toYaml | nindent 12 }}
      {{- with .Values.exec }}
      {{- if or (or (.antiAffinity).exec (.antiAffinity).custom) ((.system).antiAffinity).custom }}
      affinity:
        podAntiAffinity:
          {{- if (.antiAffinity).exec }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - {{ $.Release.Name }}-exec
              topologyKey: kubernetes.io/hostname
          {{- end }}
          {{- if or (.antiAffinity).custom ((.system).antiAffinity).custom }}
          preferredDuringSchedulingIgnoredDuringExecution:
            {{- if (.antiAffinity).custom }}
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    {{- toYaml (.antiAffinity).custom | nindent 20 }}
                topologyKey: kubernetes.io/hostname
            {{- end }}
            {{- if ((.system).antiAffinity).custom }}
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    {{- toYaml ((.system).antiAffinity).custom | nindent 20 }}
                topologyKey: kubernetes.io/hostname
            {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if (ne (.Values.priorityClass).create false) }}
      priorityClassName: {{ .Release.Name }}
      {{- end }}
{{- end }}
