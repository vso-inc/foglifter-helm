kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-mongo-init-cm
  labels:
    app: {{ .Release.Name }}-mongo
data:
  {{- $path := default "/data/db" (.Values.mongo).dbPath }}
  {{- $port := default "27017" (.Values.mongo).port | int }}
  mongo-init.sh: |
    #!/bin/sh
    if [ ! -f "{{ $path }}/mongo-init.txt" ]; then
      if [ "$HOSTNAME" = "{{ .Release.Name }}-mongo-0" ]; then
        mongo admin -eval 'db.auth("root", "'"$MONGO_INITDB_ROOT_PASSWORD"'"); db.createUser({user:"'"$MONGO_APP_USER"'", pwd:"'"$MONGO_APP_PSWD"'", roles: [{role:"read", db:"admin"}, {role:"dbOwner", db:"'"$MONGO_INITDB_DATABASE"'"}]});'
      {{- if (eq ((.Values.mongo).replication).enabled true) }}
        echo "Configuring $HOSTNAME as a primary node"
        mongo admin -eval 'rs.initiate({ _id: "'"$MONGO_REPLICA_SET"'", version: 1, members: [{ _id: 0, host: "{{ .Release.Name }}-mongo-0.{{ .Release.Name }}-mongo-svc:{{ $port }}" }]})'
        mongo admin -eval 'db.auth("root", "'"$MONGO_INITDB_ROOT_PASSWORD"'"); rs.add("{{ .Release.Name }}-mongo-1.{{ .Release.Name }}-mongo-svc:{{ $port }}")'
        mongo admin -eval 'db.auth("root", "'"$MONGO_INITDB_ROOT_PASSWORD"'"); rs.add("{{ .Release.Name }}-mongo-2.{{ .Release.Name }}-mongo-svc:{{ $port }}")'
      else
        echo "Configuring $HOSTNAME as a secondary node"
      {{- end }}
      fi
      echo "mongo-init.sh ran" > {{ $path }}/mongo-init.txt
    fi
