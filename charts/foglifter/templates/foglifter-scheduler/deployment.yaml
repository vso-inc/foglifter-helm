{{- if (ne (.Values.scheduler).enabled false) }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-scheduler
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ default "1" (.Values.scheduler).replicas | int }}
  selector:
    matchLabels:
      name: {{ .Release.Name }}-scheduler
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-scheduler
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      containers:
        - name: scheduler
          {{- $imageTagDelimiter := ":" }}
          {{- if (hasPrefix "sha256:" (.Values.scheduler).tag) }}
            {{- $imageTagDelimiter = "@" }}
          {{- end }}
          image: "{{ default "ghcr.io/vso-inc/" .Values.registry }}{{ default "foglifter-scheduler" (.Values.scheduler).repository }}{{ $imageTagDelimiter }}{{ default "latest" (.Values.scheduler).tag }}"
          imagePullPolicy: "{{ default "Always" .Values.imagePullPolicy }}"
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-cm
            {{- if and (ne (.Values.secret).create false) (.Values.secret).data }}
            - secretRef:
                name: {{ .Release.Name }}-secret
            {{- end }}
          {{- $port := default "8011" (.Values.scheduler).port | int }}
          env:
            - name: PORT
              value: "{{ $port }}"
            {{- if .Values.apiPasswordSecret }}
            - name: FOGLIFTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiPasswordSecret }}
                  key: password
            {{- end }}
            {{- if not ((.Values.scheduler).env).FOGLIFTER_CORE_URL }}
            - name: FOGLIFTER_CORE_URL
              value: {{ printf "http://%s-core-svc:%s" .Release.Name (default "8080" (.Values.core).port | toString) | quote }}
            {{- end }}
            {{- if not ((.Values.scheduler).env).FOGLIFTER_CORE_URL }}
            - name: FOGLIFTER_API_URL
              value: {{ printf "http://%s-apiservice-svc:%s/api/v1" .Release.Name (default "8080" (.Values.apiservice).port | toString) | quote }}
            {{- end }}
            {{- if (.Values.scheduler).env }}
            {{- range $key, $val := .Values.scheduler.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
          ports:
            - containerPort: {{ $port }}
          resources:
            {{- default dict (.Values.scheduler).resources | toYaml | nindent 12 }}
      {{- if (ne (.Values.priorityClass).create false) }}
      priorityClassName: {{ .Release.Name }}
      {{- end }}
{{- end }}
