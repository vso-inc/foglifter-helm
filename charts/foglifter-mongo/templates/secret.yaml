{{- $secret := printf "%s-secret" .Release.Name }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret }}
  labels:
    app: {{ .Release.Name }}
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secret) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $appPswd := (get $secretData "MONGO_APP_PSWD") | default (randAlphaNum 64) }}
  {{- $rootPswd := (get $secretData "MONGO_ROOT_PSWD") | default (randAlphaNum 64 | b64enc) }}
  {{- $uri := "" }}
  {{- if (get $secretData "MONGO_URI") }}
    {{- $uri = (get $secretData "MONGO_URI") }}
  {{- else }}
    {{- $dbName := default "foglifterDB" .Values.dbName }}
    {{- $port := default "27017" .Values.port | toString }}
    {{- if (eq (.Values.replication).enabled true) }}
      {{- $rsName := default "foglifterRS" (.Values.replication).name }}
      {{- $uri = (printf "mongodb://flUser:%s@mongo-0.mongo-svc:%s,mongo-1.mongo-svc:%s,mongo-2.mongo-svc:%s/%s?replicaSet=%s&authSource=admin&ssl=false" $appPswd $port $port $port $dbName $rsName | b64enc) }}
    {{- else }}
      {{- $uri = (printf "mongodb://flUser:%s@mongo-0.mongo-svc:%s/%s?&authSource=admin&ssl=false" $appPswd $port $dbName | b64enc) }}
    {{- end }}
  {{- end }}
  MONGO_APP_PSWD: {{ $appPswd | b64enc | quote }}
  MONGO_ROOT_PSWD: {{ $rootPswd | quote }}
  MONGO_URI: {{ $uri | quote }}
